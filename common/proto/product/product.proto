syntax = "proto3";

package product;
option go_package = ".;product";

message ProductDetailRequest {
  uint64 ProductId = 1;
}

message ProductDetailResponse {
   int64 Id = 1[json_name= "Id"];//编号
   string Image = 2 [json_name= "Image"]; //图片
   string StoreName = 3[json_name= "StoreName"]; //商品名称
   string StoreInfo = 4[json_name= "StoreInfo"]; //商品简介
   float Price = 5[json_name= "Price"]; //商品价格
   float Postage = 6[json_name= "Postage"]; //邮费
   int64  IsPostage = 7[json_name= "IsPostage"]; //是否包邮
   int64  Stock = 8[json_name= "Stock"]; //库存
   int64  Browse = 9[json_name= "Browse"]; //浏览量
}
message EsAddProductRequest{
}
message EsAddProductResponse{
  bool Success = 1;
}
message GetAllProductRequest{}
message GetAllProductResponse{
  repeated ProductDetailResponse AllProductResponse = 1;
}

message EsSearchByKeyWordRequest{
  string KeyWord = 1;
}
message EsSearchByKeyWordResponse{
  repeated ProductDetailResponse EsSearchByKeyWordResponse = 1;
}
//商品表的价格查找//jj
message PriceFindRequest{
  float price = 1;
}
message PriceFindResponse{
  repeated PriceInfo List = 1;
}
message PriceInfo{
  int64 Id = 1;//编号
  string Image = 2; //图片
  string StoreName = 3; //商品名称
  string  StoreInfo = 4; //商品简介
  float Price = 5; //商品价格
  float Postage = 6; //邮费
  int64  IsPostage = 7; //是否包邮
  int64   Stock = 8; //库存
  int64  Browse = 9; //浏览量
}

message GetCollectProductRequest{
  int64 UserId = 1;
}
message CollectProduct{
   int64  ProductId = 1;
  string  Type = 2;
  string Category = 3;
  string   AddTime = 4;
}
message GetCollectProductResponse{
  repeated CollectProduct GetCollectProductResponse = 1;
}

// 商品分类请求
message ProductCategoryRequest {
  int32 parent_id = 1;  // 用于获取指定父分类下的所有子分类，0代表根分类
}

// 商品分类响应
message ProductCategoryResponse {
  repeated Category categories = 1;  // 返回的分类列表

  // 分类信息
  message Category {
    int32 id = 1;           // 分类ID
    int32 parent_id = 2;    // 父分类ID
    string cate_name = 3;   // 分类名称
    string pic = 4;         // 分类图标
    int32 sort = 5;         // 排序字段
    int32 is_show = 6;       // 是否推荐
    int32 add_time = 7;     // 添加时间
    repeated Category sub_categories = 8; // 子分类，递归调用
  }
}
message GroupByProduct {
  int64  ProductId = 1;  // 商品id
  string Image = 2; // 推荐图
  string Images = 3; // 轮播图
  string  Title = 4; // 活动标题
  int64  People = 5; // 参团人数
  string  Info = 6;// 简介
  float Price = 7; // 价格
  int64  Stock = 8; // 库存
  int64 IsPostage = 9; // 是否包邮1是0否
  float   Postage = 10;// 邮费
  string StartTime = 11;// 拼团开始时间
  string  StopTime =12;// 拼团结束时间
  int64  Quota = 13; // 限购总数
}
message GroupByProductListRequest{}
message GroupByProductListResponse{
  repeated GroupByProduct GroupByProductListResponse = 1;
}
service Product {
  rpc ProductDetail(ProductDetailRequest) returns (ProductDetailResponse);
  rpc EsAddProduct(EsAddProductRequest) returns (EsAddProductResponse);
  rpc GetAllProduct(GetAllProductRequest) returns (GetAllProductResponse);
  rpc EsSearchByKeyWord(EsSearchByKeyWordRequest) returns (EsSearchByKeyWordResponse);
  rpc PriceFind(PriceFindRequest)returns(PriceFindResponse);//价格查找//jj
  rpc GetCollectProduct(GetCollectProductRequest) returns (GetCollectProductResponse);
  rpc ProductCategory(ProductCategoryRequest)returns(ProductCategoryResponse);//商品分类(liBang)
  rpc GroupByProductList(GroupByProductListRequest)returns(GroupByProductListResponse);
}