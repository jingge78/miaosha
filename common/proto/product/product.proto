syntax = "proto3";

package product;
option go_package = ".;product";

message ProductDetailRequest {
  uint64 ProductId = 1;
}

message ProductDetailResponse {
   int64 Id = 1[json_name= "Id"];//编号
   string Image = 2 [json_name= "Image"]; //图片
   string StoreName = 3[json_name= "StoreName"]; //商品名称
   string StoreInfo = 4[json_name= "StoreInfo"]; //商品简介
   float Price = 5[json_name= "Price"]; //商品价格
   float Postage = 6[json_name= "Postage"]; //邮费
   int64  IsPostage = 7[json_name= "IsPostage"]; //是否包邮
   int64  Stock = 8[json_name= "Stock"]; //库存
   int64  Browse = 9[json_name= "Browse"]; //浏览量
}
message EsAddProductRequest{
}
message EsAddProductResponse{
  bool Success = 1;
}
message GetAllProductRequest{}
message GetAllProductResponse{
  repeated ProductDetailResponse AllProductResponse = 1;
}
<<<<<<< HEAD
message EsSearchByKeyWordRequest{
  string KeyWord = 1;
}
message EsSearchByKeyWordResponse{
  repeated ProductDetailResponse EsSearchByKeyWordResponse = 1;
}
=======


//商品表的价格查找//jj
message PriceFindRequest{
  float price = 1;
}
message PriceFindResponse{
  repeated PriceInfo List = 1;
}
message PriceInfo{
  int64 Id = 1;//编号
  string Image = 2; //图片
  string StoreName = 3; //商品名称
  string  StoreInfo = 4; //商品简介
  float Price = 5; //商品价格
  float Postage = 6; //邮费
  int64  IsPostage = 7; //是否包邮
  int64   Stock = 8; //库存
  int64  Browse = 9; //浏览量
}

>>>>>>> 191b45c85ebaaf39781b1967de285d914c6581a1
service Product {
  rpc ProductDetail(ProductDetailRequest) returns (ProductDetailResponse);
  rpc EsAddProduct(EsAddProductRequest) returns (EsAddProductResponse);
  rpc GetAllProduct(GetAllProductRequest) returns (GetAllProductResponse);
<<<<<<< HEAD
  rpc EsSearchByKeyWord(EsSearchByKeyWordRequest) returns (EsSearchByKeyWordResponse);
=======
  rpc PriceFind(PriceFindRequest)returns(PriceFindResponse);//价格查找//jj
>>>>>>> 191b45c85ebaaf39781b1967de285d914c6581a1
}